{"version":3,"sources":["containers/settings/setting.module.css","containers/the_game/game.module.css","components/game_over/game_over.module.css","components/logo/logo.module.css","components/the_core/core.module.css","components/logo/settings.svg","components/logo/home.svg","components/the_core/run.js","components/the_core/controllers.js","components/the_core/core.js","components/score/score.js","components/game_over/game_over.js","containers/online/online.js","containers/the_game/Game.js","components/logo/logo.js","containers/settings/setting.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","id","myOponnent","hardy","Math","floor","random","the_snake","grow","length1","hardx","start_x1","start_y1","toggle1","ways","snack","speed","arr","angle1","angle2","fruit","x","y","run","add","diee","options","socket","room_id","send","width","canvas","document","querySelector","window","innerWidth","height","c","getContext","lineWidth","color","the_color","color_head","the_headColor","done","is","beginPath","fillStyle","arc","PI","fill","strokeStyle","moveTo","lineTo","stroke","closePath","qw","length","connect","x2","y2","x1","y1","find","p","i","animate","emit","head","body","requestAnimationFrame","clearRect","draw","splice","push","remove","mode","forEach","obj","distanceX","distanceY","abs","die","distance_x","distance_y","sqrt","pow","getDistance","thespeed","control","e","keyCode","setSpeed","m","touch_start","get_FirstTouch","changedTouches","clientX","TouchControl","touch_end","runn","React","memo","spee","useEffect","on","innerHeight","addEventListener","removeEventListener","cancelAnimationFrame","className","classes","Score","props","style","fontSize","num","num2","display","marginLeft","Game_over","score","result","div","GameOver","marginTop","Game","PureComponent","state","scoreOpponent","alive","start","online","message","raw_speed","increase_score","s","setState","prevstate","getScoreOpponent","pause","resume","startOnline","restart","game","this","Fragment","flex","alignItems","button","onClick","button1","Component","Logo","click","home","logo","src","Home","alt","colors","setting","set_thespeed","a","Object","assign","target","value","set_color","backgroundColor","set_headColor","Set","container","active","set_mode","bind","set_speed","onChange","input","maxLength","autoFocus","max","defaultValue","type","justifyContent","map","col","key","borderRadius","App","setOptions","opt","prev","setSetting","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.1b3fed1d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"setting_container__1Nerv\",\"button\":\"setting_button__388Q4\",\"active\":\"setting_active__3HII6\",\"input\":\"setting_input__jFB5y\",\"div\":\"setting_div__2wLzg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container1\":\"game_container1__3YcSU\",\"score_box\":\"game_score_box__3UALe\",\"button\":\"game_button__3zKn7\",\"button1\":\"game_button1__1X52O\",\"game\":\"game_game__2K-vD\",\"q\":\"game_q__3jsqJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"game_over_div__1c3E0\",\"GameOver\":\"game_over_GameOver__1CE6G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"logo_div__AgPFA\",\"logo\":\"logo_logo__1BLQM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"core_canvas__37Crl\"};","module.exports = __webpack_public_path__ + \"static/media/settings.7e19eab3.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.569e8718.svg\";","let id;\r\nlet hardy = Math.floor(Math.random() * 400)\r\n\r\nconst the_snake = {\r\n    grow: 0,\r\n    length1: 100,\r\n    hardx: 50,\r\n    hardy,\r\n    start_x1: 150,\r\n    start_y1: hardy,\r\n    toggle1: 'right',\r\n    ways: [],\r\n    snack: [],\r\n    speed: 2,\r\n    arr: [],\r\n    angle1: 0,\r\n    angle2: 0,\r\n\r\n\r\n}\r\n\r\n\r\nlet fruit = {\r\n    x: Math.floor(Math.random() * 200),\r\n    y: Math.floor(Math.random() * 200)\r\n};\r\n// let arr = [];\r\n\r\nlet myOponnent;\r\n\r\nfunction run(add, diee, options, socket, room_id, send , width) {\r\n    let canvas = document.querySelector('canvas');\r\n    if (window.innerWidth < 700) {\r\n        canvas.width = window.innerWidth - 25;\r\n    } else {\r\n        canvas.width = window.innerWidth / 2\r\n    }\r\n    if(width){\r\n        canvas.width = width\r\n    }\r\n    // canvas.width = 400;\r\n    the_snake.width = canvas.width;\r\n    the_snake.height = canvas.height;\r\n\r\n\r\n\r\n    let c = canvas.getContext('2d');\r\n    c.lineWidth = 16;\r\n    let color = options.the_color;\r\n    let color_head = options.the_headColor;\r\n\r\n    function animate() {\r\n        if (socket) {\r\n            socket.emit('onPlay', {\r\n                room_id,\r\n                the_snake,\r\n                color: {\r\n                    head: color_head,\r\n                    body: color\r\n                },\r\n                fruit,\r\n            })\r\n        }\r\n\r\n        id = requestAnimationFrame(animate)\r\n\r\n\r\n        draw()\r\n        remove()\r\n        die()\r\n        eat()\r\n        if (myOponnent) {\r\n\r\n\r\n            done(myOponnent.the_snake.hardx, myOponnent.the_snake.hardy,\r\n                myOponnent.the_snake.start_x1, myOponnent.the_snake.start_y1,\r\n                myOponnent.the_snake.angle1, myOponnent.the_snake.angle2,\r\n                myOponnent.color.body, myOponnent.color.head,\r\n                myOponnent.the_snake.ways, myOponnent.the_snake.arr,\r\n                true)\r\n\r\n        }\r\n    }\r\n\r\n    function eat() {\r\n        let distance = getDistance(fruit.x, fruit.y, the_snake.start_x1, the_snake.start_y1);\r\n        if (distance < c.lineWidth + c.lineWidth / 2) {\r\n            if (socket) {\r\n                socket.emit('ate', room_id)\r\n                fruit = {}\r\n                add(the_snake.speed)\r\n                send()\r\n            } else {\r\n                fruit.x = Math.floor(Math.random() * canvas.width);\r\n                fruit.y = Math.floor(Math.random() * canvas.height);\r\n                add(the_snake.speed)\r\n            }\r\n            if (options.speed === 'increased') {\r\n                if (the_snake.speed >= options.thespeed) {} else {\r\n                    the_snake.speed += .2\r\n                };\r\n            }\r\n            the_snake.grow = 10\r\n\r\n        }\r\n    }\r\n\r\n    function getDistance(x1, y1, x2, y2) {\r\n\r\n        let distance_x = x1 - x2;\r\n        let distance_y = y1 - y2;\r\n        let distance = Math.sqrt(Math.pow(distance_x, 2) + Math.pow(distance_y, 2));\r\n\r\n        return distance\r\n    }\r\n\r\n\r\n    function draw() {\r\n        c.clearRect(0, 0, canvas.width, canvas.height)\r\n        the_snake.length1 += the_snake.grow;\r\n\r\n        switch (the_snake.toggle1) {\r\n            case 'right':\r\n                the_snake.angle1 = 270;\r\n                the_snake.angle2 = 90;\r\n                the_snake.start_x1 += the_snake.speed\r\n                the_snake.start_x1 += the_snake.grow\r\n                if (the_snake.start_x1 >= the_snake.hardx + the_snake.length1) {\r\n                    the_snake.hardx += the_snake.speed\r\n                }\r\n                break;\r\n            case 'left':\r\n                the_snake.angle1 = 90;\r\n                the_snake.angle2 = 270;\r\n                the_snake.start_x1 -= the_snake.speed\r\n                the_snake.start_x1 -= the_snake.grow\r\n                if (the_snake.start_x1 <= the_snake.hardx - the_snake.length1) {\r\n                    the_snake.hardx -= the_snake.speed\r\n                }\r\n                break;\r\n            case 'down':\r\n                the_snake.angle1 = 360;\r\n                the_snake.angle2 = 180;\r\n                the_snake.start_y1 += the_snake.speed\r\n                the_snake.start_y1 += the_snake.grow\r\n                if (the_snake.start_y1 >= the_snake.hardy + the_snake.length1) {\r\n                    the_snake.hardy += the_snake.speed\r\n                }\r\n                break;\r\n            case 'up':\r\n                the_snake.angle1 = 180;\r\n                the_snake.angle2 = 360;\r\n                the_snake.start_y1 -= the_snake.speed\r\n                the_snake.start_y1 -= the_snake.grow\r\n                if (the_snake.start_y1 <= the_snake.hardy - the_snake.length1) {\r\n                    the_snake.hardy -= the_snake.speed\r\n                }\r\n                break;\r\n            default:\r\n                the_snake.toggle1 = 'right';\r\n        }\r\n        c.beginPath()\r\n        c.fillStyle = 'red'\r\n        c.arc(fruit.x, fruit.y, c.lineWidth, 0, 2 * Math.PI, false)\r\n        c.fill()\r\n\r\n\r\n        done(the_snake.hardx, the_snake.hardy, the_snake.start_x1, the_snake.start_y1, the_snake.angle1, the_snake.angle2, color, color_head, the_snake.ways, the_snake.arr)\r\n        the_snake.grow = 0;\r\n\r\n    \r\n    \r\n    \r\n    }\r\n    \r\n\r\n    function done(hardx, hardy, start_x1, start_y1, angle1, angle2, color, color_head, ways, arr, is) {\r\n      \r\n        c.beginPath()\r\n        if (is) { \r\n            c.fillStyle = 'black'\r\n        } else {\r\n            c.fillStyle = color_head\r\n        }\r\n        //tail\r\n        c.beginPath()\r\n        c.fillStyle = color\r\n        c.arc(hardx, hardy, c.lineWidth / 2, 0 * Math.PI / 180, 360 * Math.PI / 180)\r\n        c.fill()\r\n        //body\r\n        c.strokeStyle = color\r\n        c.beginPath()\r\n        c.moveTo(hardx, hardy)\r\n        c.lineTo(start_x1, start_y1)\r\n        c.stroke()\r\n\r\n         //head\r\n        c.beginPath()\r\n        c.fillStyle = color_head\r\n        c.arc(start_x1, start_y1, c.lineWidth / 2, angle1 * Math.PI / 180, angle2 * Math.PI / 180)\r\n        c.fill()\r\n        c.closePath();\r\n        if (ways[0]) {\r\n            for (let qw = 0; qw < ways.length - 1; qw++) {\r\n                if (ways.length > 1 && !ways[qw].connect) {\r\n                    c.beginPath()\r\n                    c.fillStyle = color\r\n                    c.arc(ways[qw].x2, ways[qw].y2, c.lineWidth / 2, 0 * Math.PI / 180, 360 * Math.PI / 180)\r\n                    c.fill()\r\n                    c.beginPath()\r\n                    c.moveTo(ways[qw].x2, ways[qw].y2);\r\n                    c.lineTo(ways[qw + 1].x2, ways[qw + 1].y2)\r\n                    c.stroke()\r\n                }\r\n            }\r\n            c.beginPath()\r\n            c.moveTo(ways[0].x1, ways[0].y1);\r\n            c.lineTo(ways[0].x2, ways[0].y2)\r\n            c.stroke()\r\n\r\n            c.beginPath()\r\n            c.fillStyle = color\r\n            c.arc(ways[0].x1, ways[0].y1, c.lineWidth / 2, 0 * Math.PI / 180, 360 * Math.PI / 180)\r\n            c.fill()\r\n\r\n            let go = ways.find((p) => p.connect)\r\n            if (go && arr[0]) {\r\n                for (let i = 0; i < arr.length; i++) {\r\n                    c.beginPath()\r\n                    c.moveTo(arr[i].x1, arr[i].y1);\r\n                    c.lineTo(arr[i].x2, arr[i].y2)\r\n                    c.stroke()\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function remove() {\r\n        if (the_snake.ways[0]) {\r\n\r\n            remove2(the_snake.ways)\r\n        }\r\n        if (the_snake.start_x1 > canvas.width || the_snake.start_y1 > canvas.height || the_snake.start_x1 < 0 || the_snake.start_y1 < 0) {\r\n            the_snake.ways.push({\r\n                x1: the_snake.hardx,\r\n                y1: the_snake.hardy,\r\n                x2: the_snake.start_x1,\r\n                y2: the_snake.start_y1,\r\n                connect: true\r\n            })\r\n            if (the_snake.start_x1 > canvas.width) {\r\n                the_snake.start_x1 = 0;\r\n                the_snake.hardx = 0\r\n            }\r\n            if (the_snake.start_y1 > canvas.height) {\r\n                the_snake.start_y1 = 0;\r\n                the_snake.hardy = 0\r\n            }\r\n            if (the_snake.start_x1 < 0) {\r\n                the_snake.start_x1 = canvas.width;\r\n                the_snake.hardx = canvas.width\r\n            }\r\n            if (the_snake.start_y1 < 0) {\r\n                the_snake.start_y1 = canvas.height;\r\n                the_snake.hardy = canvas.height\r\n            }\r\n        }\r\n    }\r\n\r\n    function remove2(ways) {\r\n        if (ways[0]) {\r\n\r\n\r\n            if (ways[0].y1 === ways[0].y2) {\r\n                if (ways[0].x1 < ways[0].x2) {\r\n                    ways[0].x1 += the_snake.speed;\r\n                    if (ways[0].x1 > ways[0].x2) {\r\n                        ways[0].x1 = ways[0].x2;\r\n                    }\r\n                }\r\n                if (ways[0].x1 > ways[0].x2) {\r\n                    ways[0].x1 -= the_snake.speed;\r\n                    if (ways[0].x1 < ways[0].x2) {\r\n                        ways[0].x1 = ways[0].x2;\r\n                    }\r\n\r\n                }\r\n\r\n                if (ways[0].x1 === ways[0].x2) {\r\n                    if (ways[0].connect) {\r\n                        the_snake.arr.splice(0, 1)\r\n                    }\r\n                    ways.splice(0, 1)\r\n                    the_snake.snack.splice(0, 1)\r\n                }\r\n            } else if (ways[0].x1 === ways[0].x2) {\r\n                if (ways[0].y1 < ways[0].y2) {\r\n                    ways[0].y1 += the_snake.speed;\r\n                    if (ways[0].y1 > ways[0].y2) {\r\n                        ways[0].y1 = ways[0].y2;\r\n                    }\r\n                }\r\n                if (ways[0].y1 > ways[0].y2) {\r\n                    ways[0].y1 -= the_snake.speed;\r\n                    if (ways[0].y1 < ways[0].y2) {\r\n                        ways[0].y1 = ways[0].y2;\r\n                    }\r\n                }\r\n                if (ways[0].y1 === ways[0].y2) {\r\n                    if (ways[0].connect) {\r\n                        the_snake.arr.splice(0, 1)\r\n                    }\r\n                    ways.splice(0, 1)\r\n                    the_snake.snack.splice(0, 1)\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function die() {\r\n        if (options.mode === 'restricted') {\r\n            if (the_snake.start_x1 >= canvas.width || the_snake.start_y1 >= canvas.height || the_snake.start_x1 <= 0 || the_snake.start_y1 <= 0) {\r\n                diee()\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (the_snake.ways.length === 1 && (the_snake.length1 >= canvas.width - c.lineWidth || the_snake.length1 >= canvas.height - c.lineWidth) && the_snake.ways[0].connect === true) {\r\n            diee()\r\n        }\r\n        the_snake.ways.forEach((obj) => {\r\n            let distanceX = the_snake.start_x1 - obj.x1;\r\n            let distanceY = the_snake.start_y1 - obj.y1;\r\n            if (Math.abs(distanceY) <= c.lineWidth) {\r\n                if ((the_snake.start_x1 < obj.x2 && the_snake.start_x1 > obj.x1) || (the_snake.start_x1 > obj.x2 && the_snake.start_x1 < obj.x1)) {\r\n                    diee()\r\n                }\r\n            }\r\n            if (Math.abs(distanceX) <= c.lineWidth) {\r\n                if ((the_snake.start_y1 < obj.y2 && the_snake.start_y1 > obj.y1) || (the_snake.start_y1 > obj.y2 && the_snake.start_y1 < obj.y1)) {\r\n                    diee()\r\n                }\r\n            }\r\n        })\r\n    }\r\n    animate()\r\n}\r\n\r\nfunction control(e) {\r\n    if ((e.keyCode === 37 || e.keyCode === 39) && the_snake.speed !== 0) {\r\n\r\n        if (the_snake.ways[0]) {\r\n            if (the_snake.ways[the_snake.ways.length - 1].connect) {\r\n                the_snake.arr.push({\r\n                    x1: the_snake.hardx,\r\n                    y1: the_snake.hardy,\r\n                    x2: the_snake.start_x1,\r\n                    y2: the_snake.start_y1,\r\n                    draw: true,\r\n\r\n                })\r\n            }\r\n        }\r\n        the_snake.ways.push({\r\n            x1: the_snake.hardx,\r\n            y1: the_snake.hardy,\r\n            x2: the_snake.start_x1,\r\n            y2: the_snake.start_y1\r\n\r\n        })\r\n        if (e.keyCode === 39) {\r\n            the_snake.hardy = the_snake.start_y1;\r\n            the_snake.hardx = the_snake.start_x1;\r\n            if (the_snake.toggle1 === 'right' || the_snake.toggle1 === '') {\r\n                the_snake.toggle1 = 'down'\r\n            } else if (the_snake.toggle1 === 'down') {\r\n                the_snake.toggle1 = 'left'\r\n            } else if (the_snake.toggle1 === 'left') {\r\n                the_snake.toggle1 = 'up'\r\n            } else if (the_snake.toggle1 === 'up') {\r\n                the_snake.toggle1 = 'right'\r\n            }\r\n        }\r\n        if (e.keyCode === 37) {\r\n            the_snake.hardy = the_snake.start_y1;\r\n            the_snake.hardx = the_snake.start_x1;\r\n            if (the_snake.toggle1 === 'right' || the_snake.toggle1 === '') {\r\n                the_snake.toggle1 = 'up'\r\n            } else if (the_snake.toggle1 === 'up') {\r\n                the_snake.toggle1 = 'left'\r\n            } else if (the_snake.toggle1 === 'left') {\r\n                the_snake.toggle1 = 'down'\r\n            } else if (the_snake.toggle1 === 'down') {\r\n                the_snake.toggle1 = 'right'\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction getId() {\r\n    return id\r\n}\r\n\r\nfunction setSpeed(m) {\r\n    the_snake.speed = m;\r\n}\r\n\r\nfunction reset() {\r\n    the_snake.length1 = 100;\r\n    the_snake.hardx = 50;\r\n    the_snake.hardy = Math.floor(Math.random() * 400);\r\n    the_snake.start_x1 = the_snake.hardx + the_snake.length1;\r\n    the_snake.start_y1 = the_snake.hardy;\r\n    the_snake.toggle1 = 'right';\r\n    the_snake.speed = 2\r\n    the_snake.ways = [];\r\n    the_snake.arr = []\r\n    the_snake.snack = []\r\n    window.cancelAnimationFrame(id)\r\n\r\n}\r\n\r\nfunction setFruit(m) {\r\n    fruit = m\r\n}\r\n\r\nfunction setMyOpponent(m) {\r\n    myOponnent = m\r\n}\r\n\r\nexport {\r\n    run,\r\n    control,\r\n    getId,\r\n    setSpeed,\r\n    reset,\r\n    setFruit,\r\n    setMyOpponent\r\n}\r\n// let id ; \r\n// let grow = 0\r\n// let length1 = 100;\r\n// let hardx = 50;\r\n// let hardy = Math.floor(Math.random()*400)\r\n// let start_x1 = hardx + length1;\r\n// let start_y1 = hardy;\r\n// let toggle1 = 'right';\r\n// let ways = [];\r\n// let snack = [];\r\n// let speed = 2 ; \r\n\r\n\r\n// let fruit = {\r\n//     x: Math.floor(Math.random() * 200), \r\n//     y: Math.floor(Math.random() * 200)\r\n// };\r\n// let arr = [];\r\n// let angle1 = 0;\r\n// let angle2 = 0;\r\n\r\n// let myOponnent;\r\n// function run(add , diee , options, socket,room_id,send){\r\n//     let canvas = document.querySelector('canvas');\r\n//     if(window.innerWidth< 700){\r\n//         canvas.width = window.innerWidth-5\r\n//     }else{\r\n//         canvas.width = window.innerWidth/2\r\n//     }\r\n\r\n//     let c = canvas.getContext('2d');\r\n//     c.lineWidth = 16;\r\n//     let color = options.the_color;\r\n//     let color_head = options.the_headColor;\r\n\r\n//     function animate() {\r\n//         if(socket){\r\n//                 socket.emit('onPlay',{\r\n//                     room_id,\r\n//                     snack:{\r\n//                         hardx, \r\n//                         hardy ,\r\n//                     start_x1,\r\n//                     start_y1,\r\n//                     angle1,\r\n//                     angle2\r\n//                     },\r\n//                     color:{\r\n//                         head : color_head,\r\n//                         body : color\r\n//                     },\r\n//                     // fruit,\r\n//                     ways,\r\n//                     arr\r\n//                 }) \r\n//         }\r\n\r\n//         id =  requestAnimationFrame(animate)\r\n\r\n\r\n//         draw()\r\n//         remove()\r\n//         die()\r\n//         eat()\r\n//         if(myOponnent){\r\n\r\n//             done(myOponnent.snack.hardx,myOponnent.snack.hardy,\r\n//                 myOponnent.snack.start_x1, myOponnent.snack.start_y1,\r\n//                 myOponnent.snack.angle1,myOponnent.snack.angle2,\r\n//                 myOponnent.color.body,myOponnent.color.head,\r\n//                 myOponnent.ways , myOponnent.arr,\r\n//                 true)\r\n\r\n//     }\r\n// } \r\n\r\n//     function eat() {\r\n//         let distance = getDistance(fruit.x,fruit.y , start_x1,start_y1);\r\n//         if (distance < c.lineWidth+c.lineWidth/2) {\r\n//             if(socket){\r\n//             socket.emit('ate',room_id)  \r\n//             fruit ={}\r\n//             add(speed)\r\n//             send()\r\n//             }else{\r\n//             fruit.x =Math.floor(Math.random() * canvas.width);\r\n//             fruit.y =Math.floor(Math.random() * canvas.height);\r\n//             add(speed)\r\n//            }\r\n//             if(options.speed === 'increased'){\r\n//                 if(speed >=options.thespeed ){}else{speed += .2};                \r\n//             }   \r\n//            grow = 10\r\n\r\n//         }\r\n//     }\r\n//     function getDistance(x1,y1,x2,y2){\r\n\r\n//         let distance_x = x1 - x2;\r\n//         let distance_y = y1 - y2;\r\n//         let distance = Math.sqrt(Math.pow(distance_x, 2) + Math.pow(distance_y, 2));\r\n\r\n//         return distance\r\n//     }\r\n\r\n\r\n//     function draw() {\r\n//         c.clearRect(0, 0, canvas.width, canvas.height)\r\n//         length1 += grow;\r\n\r\n//         switch (toggle1) {\r\n//             case 'right':\r\n//                 angle1 = 270;\r\n//                 angle2 = 90;\r\n//                 start_x1 += speed\r\n//                 start_x1 += grow\r\n//                 if (start_x1 >= hardx + length1) {\r\n//                     hardx += speed\r\n//                 }\r\n//                 break;\r\n//             case 'left':\r\n//                 angle1 = 90;\r\n//                 angle2 = 270;\r\n//                 start_x1 -= speed\r\n//                 start_x1 -= grow\r\n//                 if (start_x1 <= hardx - length1) {\r\n//                     hardx -= speed\r\n//                 }\r\n//                 break;\r\n//             case 'down':\r\n//                 angle1 = 360;\r\n//                 angle2 = 180;\r\n//                 start_y1 += speed\r\n//                 start_y1 += grow\r\n//                 if (start_y1 >= hardy + length1) {\r\n//                     hardy += speed\r\n//                 }\r\n//                 break;\r\n//             case 'up':\r\n//                 angle1 = 180;\r\n//                 angle2 = 360;\r\n//                 start_y1 -= speed\r\n//                 start_y1 -= grow\r\n//                 if (start_y1 <= hardy - length1) {\r\n//                     hardy -= speed\r\n//                 }\r\n//                 break;\r\n//             default :toggle1='right';    \r\n//         }\r\n//         c.beginPath()\r\n//         c.fillStyle = 'red'\r\n//         c.arc(fruit.x, fruit.y, c.lineWidth , 0, 2 * Math.PI, false)\r\n//         c.fill()\r\n\r\n\r\n//         done(hardx,hardy,start_x1,start_y1,angle1,angle2,color,color_head,ways,arr)\r\n//         grow = 0;\r\n\r\n//     }\r\n//     function done(hardx , hardy,start_x1,start_y1,angle1,angle2,color,color_head,ways,arr,is){\r\n\r\n//         c.beginPath()\r\n//         if(is){\r\n//             c.fillStyle = 'black'\r\n//        }else{\r\n//            c.fillStyle = color_head\r\n//        }\r\n\r\n//         c.beginPath()\r\n//         c.fillStyle = color\r\n//         c.arc(hardx, hardy, c.lineWidth / 2, 0 * Math.PI / 180, 360 * Math.PI / 180)\r\n//         c.fill()\r\n\r\n//         c.strokeStyle = color\r\n//         c.beginPath()\r\n//         c.moveTo(hardx, hardy)\r\n//         c.lineTo(start_x1, start_y1)\r\n//         c.stroke()\r\n//         c.beginPath() //head\r\n\r\n//             c.fillStyle = color_head\r\n\r\n//         c.arc(start_x1, start_y1, c.lineWidth / 2, angle1 * Math.PI / 180, angle2 * Math.PI / 180)\r\n//         c.fill()\r\n//         c.closePath();\r\n//         if (ways[0]) {\r\n//             for (let qw = 0; qw < ways.length - 1; qw++) {\r\n//                 if (ways.length > 1 && !ways[qw].connect) {\r\n//                     c.beginPath()\r\n//                     c.fillStyle = color\r\n//                     c.arc(ways[qw].x2, ways[qw].y2, c.lineWidth / 2, 0 * Math.PI / 180, 360 * Math.PI / 180)\r\n//                     c.fill()\r\n//                     c.beginPath()\r\n//                     c.moveTo(ways[qw].x2, ways[qw].y2);\r\n//                     c.lineTo(ways[qw + 1].x2, ways[qw + 1].y2)\r\n//                     c.stroke()\r\n//                 }\r\n//             }\r\n//             c.beginPath()\r\n//             c.moveTo(ways[0].x1, ways[0].y1);\r\n//             c.lineTo(ways[0].x2, ways[0].y2)\r\n//             c.stroke()\r\n\r\n//             c.beginPath()\r\n//             c.fillStyle = color\r\n//             c.arc(ways[0].x1, ways[0].y1, c.lineWidth / 2, 0 * Math.PI / 180, 360 * Math.PI / 180)\r\n//             c.fill()\r\n\r\n//             let go = ways.find((p) => p.connect)\r\n//             if (go && arr[0]) {\r\n//                 for (let i = 0; i < arr.length; i++) {\r\n//                     c.beginPath()\r\n//                     c.moveTo(arr[i].x1, arr[i].y1);\r\n//                     c.lineTo(arr[i].x2, arr[i].y2)\r\n//                     c.stroke()\r\n//                 }\r\n//             }\r\n\r\n//         }    \r\n\r\n//     }\r\n//     function remove() {\r\n//         if (ways[0]) {\r\n\r\n//             remove2(ways)\r\n//         }\r\n//         if (start_x1 > canvas.width || start_y1 > canvas.height || start_x1 < 0 || start_y1 < 0) {\r\n//             ways.push({\r\n//                 x1: hardx,\r\n//                 y1: hardy,\r\n//                 x2: start_x1,\r\n//                 y2: start_y1,\r\n//                 connect: true\r\n//             })\r\n//             if (start_x1 > canvas.width) {\r\n//                 start_x1 = 0;\r\n//                 hardx = 0\r\n//             }\r\n//             if (start_y1 > canvas.height) {\r\n//                 start_y1 = 0;\r\n//                 hardy = 0\r\n//             }\r\n//             if (start_x1 < 0) {\r\n//                 start_x1 = canvas.width;\r\n//                 hardx = canvas.width\r\n//             }\r\n//             if (start_y1 < 0) {\r\n//                 start_y1 = canvas.height;\r\n//                 hardy = canvas.height\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     function remove2(ways) {\r\n//         if (ways[0]) {\r\n\r\n\r\n//             if (ways[0].y1 === ways[0].y2) {\r\n//                 if (ways[0].x1 < ways[0].x2) {\r\n//                     ways[0].x1 += speed;\r\n//                     if (ways[0].x1 > ways[0].x2) {\r\n//                         ways[0].x1 = ways[0].x2;\r\n//                     }\r\n//                 }\r\n//                 if (ways[0].x1 > ways[0].x2) {\r\n//                     ways[0].x1 -= speed;\r\n//                     if (ways[0].x1 < ways[0].x2) {\r\n//                         ways[0].x1 = ways[0].x2;\r\n//                     }\r\n\r\n//                 }\r\n\r\n//                 if (ways[0].x1 === ways[0].x2) {\r\n//                     if (ways[0].connect) {\r\n//                         arr.splice(0, 1)\r\n//                     }\r\n//                     ways.splice(0, 1)\r\n//                     snack.splice(0, 1)\r\n//                 }\r\n//             } else if (ways[0].x1 === ways[0].x2) {\r\n//                 if (ways[0].y1 < ways[0].y2) {\r\n//                     ways[0].y1 += speed;\r\n//                     if (ways[0].y1 > ways[0].y2) {\r\n//                         ways[0].y1 = ways[0].y2;\r\n//                     }\r\n//                 }\r\n//                 if (ways[0].y1 > ways[0].y2) {\r\n//                     ways[0].y1 -= speed;\r\n//                     if (ways[0].y1 < ways[0].y2) {\r\n//                         ways[0].y1 = ways[0].y2;\r\n//                     }\r\n//                 }\r\n//                 if (ways[0].y1 === ways[0].y2) {\r\n//                     if (ways[0].connect) {\r\n//                         arr.splice(0, 1)\r\n//                     }\r\n//                     ways.splice(0, 1)\r\n//                     snack.splice(0, 1)\r\n//                 }\r\n//             }\r\n\r\n//         }\r\n//     }\r\n\r\n//     function die() {\r\n//      if(options.mode ==='restricted'){\r\n//         if (start_x1 >= canvas.width || start_y1 >= canvas.height || start_x1 <=0 || start_y1 <= 0) {\r\n//             diee()\r\n//             return;       \r\n//         }\r\n//     }\r\n\r\n//         if(ways.length ===1 && (length1 >= canvas.width-c.lineWidth ||length1 >= canvas.height-c.lineWidth) &&ways[0].connect===true){\r\n//             diee()\r\n//         }\r\n//         ways.forEach((obj) => {\r\n//                 let distanceX = start_x1 - obj.x1;\r\n//                 let distanceY = start_y1 - obj.y1;\r\n//                 if(Math.abs(distanceY) <=c.lineWidth){\r\n//                     if ((start_x1 < obj.x2 && start_x1> obj.x1) ||(start_x1> obj.x2 && start_x1< obj.x1 )){\r\n//                         diee()\r\n//                     }\r\n//                 }\r\n//                 if(Math.abs(distanceX) <=c.lineWidth){\r\n//                     if ((start_y1 < obj.y2 && start_y1> obj.y1)||(start_y1> obj.y2 && start_y1< obj.y1)){\r\n//                         diee()\r\n//                     } \r\n//                 }\r\n//         })\r\n//     }\r\n//     animate()\r\n//     }\r\n// function control(e){\r\n//           if ((e.keyCode === 37 ||e.keyCode === 39 )&& speed !==0 ) {\r\n\r\n//             if (ways[0]) {\r\n//                 if (ways[ways.length - 1].connect) {\r\n//                     arr.push({\r\n//                         x1: hardx,\r\n//                         y1: hardy,\r\n//                         x2: start_x1,\r\n//                         y2: start_y1,\r\n//                         draw: true,\r\n\r\n//                     })\r\n//                 }\r\n//             }\r\n//             ways.push({\r\n//                 x1: hardx,\r\n//                 y1: hardy,\r\n//                 x2: start_x1,\r\n//                 y2: start_y1\r\n\r\n//             })\r\n//             if (e.keyCode === 39) {\r\n//                 hardy = start_y1;\r\n//                 hardx = start_x1;\r\n//                 if (toggle1 === 'right' || toggle1 === '') {\r\n//                     toggle1 = 'down'\r\n//                 } else if (toggle1 === 'down') {\r\n//                     toggle1 = 'left'\r\n//                 } else if (toggle1 === 'left') {\r\n//                     toggle1 = 'up'\r\n//                 } else if (toggle1 === 'up') {\r\n//                     toggle1 = 'right'\r\n//                 }\r\n//             }\r\n//             if (e.keyCode === 37) {\r\n//                 hardy = start_y1;\r\n//                 hardx = start_x1;\r\n//                 if (toggle1 === 'right' || toggle1 === '') {\r\n//                     toggle1 = 'up'\r\n//                 } else if (toggle1 === 'up') {\r\n//                     toggle1 = 'left'\r\n//                 } else if (toggle1 === 'left') {\r\n//                     toggle1 = 'down'\r\n//                 } else if (toggle1 === 'down') {\r\n//                     toggle1 = 'right'\r\n//                 }\r\n//             }\r\n//           }\r\n//     }\r\n\r\n// function getId(){\r\n//         return id\r\n//     }\r\n// function setSpeed(m){\r\n//     speed = m ;\r\n// }\r\n// function reset(){\r\n//             length1 = 100;\r\n//             hardx = 50;\r\n//             hardy = 50\r\n//             start_x1 = hardx + length1;\r\n//             start_y1 = hardy;\r\n//             toggle1 = 'right';\r\n//             speed = 2\r\n//             ways = [];\r\n//             arr = []\r\n//             snack = []\r\n//             window.cancelAnimationFrame(id)\r\n\r\n// }\r\n// function setFruit(m){\r\n//   fruit = m\r\n// }    \r\n// function setMyOpponent(m){\r\n//   myOponnent = m\r\n// }    \r\n\r\n// export  {run , control , getId , setSpeed , reset , setFruit , setMyOpponent}   ","import * as runn  from './run'\r\n\r\n let touch_start = 0\r\n    \r\n    function get_FirstTouch(e){\r\n        touch_start = e.changedTouches[0].clientX\r\n    }\r\n    \r\n    function TouchControl(e){\r\n    \r\n       let touch_end = e.changedTouches[0].clientX\r\n         if(touch_start > touch_end){\r\n             e.keyCode = 37\r\n            }\r\n         if(touch_start < touch_end){\r\n             e.keyCode = 39\r\n         }\r\n         runn.control(e)\r\n    }\r\n    \r\n\r\n    export {get_FirstTouch , TouchControl}","import classes from './core.module.css';\r\nimport React,{useEffect } from 'react';\r\nimport * as runn  from './run'\r\nimport {get_FirstTouch , TouchControl}  from './controllers'\r\n\r\n\r\n\r\nfunction Core({add,die,spee, options , socket,room_id,send}){\r\n    \r\n    useEffect(()=>{\r\n        if(socket){\r\n            socket.emit('ate',room_id);\r\n             \r\n            socket.on('onPlay' ,(m)=>{\r\n                   runn.setMyOpponent(m)\r\n                })\r\n                socket.on(  'ate',(m)=>{\r\n                    runn.setFruit(m)\r\n                })\r\n            socket.emit('adjust',{height:window.innerHeight ,width:window.innerWidth , room_id})\r\n           \r\n        }\r\n   },[socket , room_id])\r\n    useEffect(() => {\r\n        if(spee === 0){\r\n            runn.setSpeed(0) \r\n        }else{\r\n            if(options.speed==='fixed'){\r\n               runn.setSpeed(+options.thespeed);\r\n            }else if(options.speed==='increased'){\r\n                runn.setSpeed(spee)\r\n            }\r\n        }\r\n    }, [spee , options])\r\n    useEffect(()=>{ //controllers add and removed\r\n        window.addEventListener('keyup', runn.control)\r\n        window.addEventListener('touchstart',get_FirstTouch)\r\n        window.addEventListener('touchend',TouchControl)\r\n                 \r\n        return ()=>{\r\n            window.removeEventListener('keyup', runn.control)\r\n            window.removeEventListener('touchstart', get_FirstTouch)\r\n            window.removeEventListener('touchend', TouchControl)\r\n            runn.reset()\r\n        }\r\n    },[])\r\n    useEffect(()=>{\r\n        if(socket){\r\n        socket.on('adjust' ,(m)=>{\r\n            let width;\r\n            if(m.width<window.innerWidth){\r\n                width = m.width\r\n            }else{\r\n                width = window.innerWidth\r\n            }\r\n            if(width >700){\r\n                width *=.5\r\n            }\r\n        runn.run(add, die , options, socket,room_id,send , width) \r\n\r\n        })\r\n    }else{\r\n        runn.run(add, die , options, socket,room_id,send ) \r\n        \r\n    }\r\n    },[add, die , options, socket,room_id,send])\r\n\r\n    return(  \r\n        <canvas  width='400px' height='400px' className={classes.canvas}></canvas>\r\n\r\n    )\r\n}\r\n   \r\n    export default React.memo(Core)","import React from 'react'\r\n\r\nexport default function Score (props){\r\n    return(\r\n                \r\n        <div className='score_box'>\r\n            <h1> Score</h1>\r\n            <span style={{fontSize: '2.2rem'}}>{props.num}</span>\r\n          { props.num2 ? <span style={{display:'inline-block',marginLeft:'10px',fontSize: '2.2rem',color:'rgba(255,0,0,.2)'}}>{props.num2}</span>\r\n            :''}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport classes from './game_over.module.css';\r\n\r\nexport default function Game_over({score , result}){\r\n       \r\n    return(\r\n        <div className={classes.div}>\r\n            <div className={classes.GameOver}>\r\n                <h1 >Game Over</h1>\r\n                <h1 >{result}</h1>\r\n                <h1 style={{marginTop:0}}>Your score is {score}</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Core from '../../components/the_core/core'\r\n\r\nimport socketIOClient from \"socket.io-client\";\r\nlet socket ;\r\nexport default class Online extends React.PureComponent{\r\n     state={\r\n         mystate : false,\r\n         alive : true,\r\n         room_id:null ,\r\n         restart : false\r\n\r\n     }\r\n    componentDidMount(){\r\n        socket = socketIOClient('http://192.168.1.4:3001/');\r\n        socket.on('exit',(m)=>{\r\n            socket.disconnect()\r\n            this.props.die()\r\n        })\r\n        socket.on('gameOver',(m)=>{\r\n            this.setState({alive : false})\r\n        })\r\n        socket.on('joined',(m)=>{\r\n           this.setState({room_id : m})\r\n        })\r\n        socket.on('start',(m)=>{        \r\n            this.setState({mystate : m})\r\n        })\r\n        socket.on('sendScore',(m)=>{\r\n            this.props.setScore(m)\r\n        })\r\n        socket.on('die',(m)=>{\r\n            this.setState({alive : false})\r\n        })\r\n        socket.on('restart',(m)=>{\r\n            this.setState({restart : true})\r\n        })\r\n        socket.on('play_again',(m)=>{\r\n            this.setState({alive : true , restart:false})\r\n        }) \r\n\r\n\r\n    }\r\n    restart =()=>{\r\n        if(this.state.restart === true){\r\n            socket.emit('play_again',this.state.room_id)\r\n        }else{\r\n            socket.emit('restart',this.state.room_id)\r\n        }\r\n    }\r\n    die =()=>{\r\n        this.setState({alive : false})\r\n        socket.emit('die','')\r\n    }\r\n\r\n    send_score = ()=>{\r\n        socket.emit('sendScore',{room_id : this.state.room_id,score:this.props.onlineScore})\r\n    }\r\n  \r\n  \r\n    render(){\r\n        return (\r\n            this.state.mystate ?\r\n                this.state.alive ?\r\n                    <Core send={this.send_score} options={this.props.options} spee={this.props.spee} alive={this.props.alive} add ={this.props.add} die ={this.die} socket={socket} room_id={this.state.room_id}/>\r\n                    :<h1 onClick = {this.restart}>restart</h1>\r\n                :\r\n                <h1 > waiting for opponenet </h1>\r\n        )\r\n    }\r\n}","import React ,{Component}from 'react'\r\n\r\nimport Core from '../../components/the_core/core'\r\nimport Score from '../../components/score/score'\r\nimport GameOver from '../../components/game_over/game_over'\r\nimport classes from './game.module.css'\r\nimport Online from '../online/online'\r\n\r\n\r\nclass Game extends Component {\r\n\r\n    state ={\r\n        score : 0 ,\r\n        scoreOpponent : 0 ,\r\n        alive : true ,\r\n        start : false,\r\n        online :false,\r\n        speed : 2,\r\n        message : ''\r\n    }\r\n    raw_speed = 0\r\n    \r\n    increase_score = (s)=>{\r\n        this.raw_speed = s\r\n        this.setState((prevstate)=>{\r\n            return {\r\n                score : prevstate.score + 1\r\n            }\r\n        })\r\n    }\r\n    getScoreOpponent = (s)=>{\r\n        this.setState({scoreOpponent : s})\r\n    }\r\n  die = (online , result)=>{\r\n        this.setState({alive : false})\r\n        if(online){\r\n            this.setState({message : result})\r\n        }\r\n\r\n    }\r\n\r\n    pause = ()=>{\r\n      this.setState({speed : 0})\r\n    }\r\n    resume = ()=>{\r\n      this.setState({speed : this.raw_speed ||2})\r\n    }\r\n    \r\n    start = ()=>{\r\n      this.setState({start : true})\r\n    }\r\n    startOnline = ()=>{\r\n      this.setState({start : true,online : true})\r\n    }\r\n    \r\n    restart = ()=>{\r\n        this.setState({\r\n            score : 0 ,\r\n            alive : true ,\r\n            start : true,\r\n            speed :2\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div className={classes.game}> \r\n        {\r\n                this.state.start ?  \r\n                 this.state.alive ? \r\n                        <React.Fragment>\r\n                                <Score num = {this.state.score} num2={this.state.scoreOpponent}/>\r\n                                {!this.state.online ?\r\n                                <Core options={this.props.options} spee={this.state.speed} alive={this.state.alive} add ={this.increase_score} die ={this.die} />\r\n                                :''\r\n                                // <Online setScore={this.getScoreOpponent} onlineScore ={this.state.score} options={this.props.options} spee={this.state.speed} alive={this.state.alive} add ={this.increase_score} die ={this.die}/>\r\n                                \r\n                                }\r\n                        </React.Fragment>                 \r\n                 \r\n                 :      <GameOver result = {this.state.message} score={this.state.score}/>    \r\n                  \r\n                :''\r\n            }\r\n            \r\n\r\n            <div style={{flex:2 , display:'flex' , alignItems:'center'}}>\r\n                 {\r\n                  this.state.start ?\r\n                    this.state.speed > 0 ? \r\n                        this.state.alive ?\r\n                        <button className={classes.button} onClick={this.pause}> Pause</button>\r\n\r\n                        :<button className={classes.button} onClick={this.restart}>ReStart</button>\r\n                        \r\n                        :\r\n                        <button className={classes.button} onClick={this.resume}> resume</button>\r\n                    :  \r\n                    <React.Fragment>\r\n                        <button className={classes.button1}  onClick={this.start}>Start</button>\r\n                        {/* <button className={classes.button1}  onClick={this.startOnline}>play online</button> */}\r\n                    </React.Fragment>\r\n                }           \r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Game ","import React from 'react'\r\nimport logo from './settings.svg'\r\nimport Home from './home.svg'\r\nimport classes from './logo.module.css'\r\n\r\n\r\nexport default function Logo ({click , home}){\r\n\r\n    return(\r\n        <div className={classes.div} onClick={click}>\r\n                <img  className={classes.logo} src={home? Home:logo} alt='setting' height='50px' width='50px'></img>\r\n        </div>\r\n    )\r\n}","import React,{Component} from 'react';\r\nimport classes from './setting.module.css'\r\n\r\nlet colors = ['red','blue','green','black','orange','white']\r\nexport default class setting extends Component{\r\n    state ={\r\n        options : {}\r\n    }\r\n    componentWillUnmount(){\r\n        this.props.Set(this.state.options)   \r\n    }\r\n    componentDidMount(){\r\n        this.setState({options : this.props.options})   \r\n    }\r\n    set_mode(a){\r\n        let obj = Object.assign(this.state.options,{mode :a})\r\n        this.setState({options : obj})\r\n    }\r\n    set_speed(a){\r\n        let obj = Object.assign(this.state.options,{speed :a})\r\n        this.setState({options : obj})\r\n    }\r\n    set_thespeed = (a)=>{\r\n        let obj = Object.assign(this.state.options,{thespeed :a.target.value})\r\n        this.setState({options : obj})\r\n    }\r\n    \r\n    set_color = (e)=>{\r\n        document.querySelector('#body').style.backgroundColor = e.target.value;\r\n        let obj = Object.assign(this.state.options,{the_color :e.target.value})\r\n        this.setState({options : obj})\r\n        \r\n    }\r\n    \r\n    set_headColor = (e)=>{\r\n        document.querySelector('#head').style.backgroundColor = e.target.value;\r\n        let obj = Object.assign(this.state.options,{the_headColor :e.target.value})\r\n        this.setState({options : obj})\r\n        \r\n    }\r\n    render(){\r\n        \r\n        return(\r\n            <div className={classes.container}>\r\n            <h1>setting</h1>\r\n            <div className={classes.div}>\r\n                <h2>mode of game</h2>\r\n                <button  className={`${classes.button} \r\n                ${this.state.options.mode==='free'? classes.active:''}`}  onClick={this.set_mode.bind(this,'free')}>Free</button>\r\n                <button className={`${classes.button} \r\n                ${this.state.options.mode==='restricted'? classes.active:''}`}  onClick={this.set_mode.bind(this,'restricted')}>Resticted</button>\r\n               \r\n               {/* <div style={{marginTop : 64}}> */}\r\n                    {/* <h2>Body color</h2>\r\n                        <select  onChange={this.set_color}>\r\n                        <option >pick color---</option>\r\n                            {colors.map((col,i)=><option key={i} value={col}>{col}</option>)}\r\n                        </select> */}\r\n                {/* </div> */}\r\n                \r\n            </div >\r\n            <div className={classes.div}> \r\n                <h2>speed</h2>\r\n                <button className={`${classes.button} \r\n                ${this.state.options.speed==='fixed'? classes.active:''}`}  onClick={this.set_speed.bind(this,'fixed')}>Fixed</button>\r\n                <button  className={`${classes.button} \r\n                ${this.state.options.speed==='increased'? classes.active:''}`} onClick={this.set_speed.bind(this,'increased')}>Increased</button>\r\n                {this.state.options.speed==='fixed'?\r\n                       <div>\r\n                        <label>fixed speed :</label>\r\n                        <input onChange={this.set_thespeed} className={classes.input} maxLength='1' autoFocus max='10' defaultValue='2'  type='range'/> \r\n                        </div> \r\n                        : this.state.options.speed==='increased'? \r\n                        <div>\r\n                        <label>Max-speed :</label>\r\n                        <input className={classes.input} onChange={this.set_thespeed}  autoFocus max='10' defaultValue='5'  type='range'/> \r\n                        </div> :''\r\n                       \r\n                }\r\n                {/* <div style={{marginTop : 42}}>\r\n                    <h2>Head color</h2>\r\n                        <select  onChange={this.set_headColor}>\r\n                        <option >pick color---</option>\r\n                            {colors.map((col,i)=><option key={i} value={col}>{col}</option>)}\r\n                        </select>\r\n                </div>\r\n                 */}\r\n            </div>\r\n            <div style={{display:'flex' , justifyContent:'space-around'}}>\r\n            <div>\r\n                    <h2>Head color</h2>\r\n                        <select  onChange={this.set_headColor}>\r\n                        <option >pick color---</option>\r\n                            {colors.map((col,i)=><option key={i} value={col}>{col}</option>)}\r\n                        </select>\r\n            </div>\r\n            <div>\r\n                \r\n            <h2>Body color</h2>\r\n                        <select  onChange={this.set_color}>\r\n                        <option >pick color---</option>\r\n                            {colors.map((col,i)=><option key={i} value={col}>{col}</option>)}\r\n                        </select>\r\n            </div>\r\n            </div>\r\n            <div style={{marginTop : 40}}>\r\n                <span id='body' style={{display:'inline-block', borderRadius:'10px 0 0 10px' , width:'90px' , height:'20px'}}></span>\r\n                <span id='head' style={{display:'inline-block', borderRadius:'0 10px 10px 0' , width:'10px' , height:'20px'}}></span>\r\n            </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}","import React from 'react';\nimport './App.css';\nimport Game from '../the_game/Game'\nimport Logo from '../../components/logo/logo'\nimport Setting from '../../containers/settings/setting'\n\nclass  App extends React.Component {\n   state ={\n     setting : false,\n     options :{\n      mode : 'free',\n      speed : 'increased',\n      thespeed : 6,\n      the_color : 'blue',\n      the_headColor : 'red'\n     }\n   }\n\n   setOptions = (opt)=>{\n      this.setState({options : opt})\n    }\n\n  setSetting(){\n    this.setState((prev)=>{\n      return{\n        setting : !prev.setting\n      }\n    })\n  }\n  render(){\n\n    return (\n        <div className=\"App\"> \n            <Logo home={this.state.setting} click={this.setSetting.bind(this)}/>\n            {!this.state.setting ? \n            <Game options={this.state.options}/> :\n            <Setting options={this.state.options} Set ={this.setOptions}/>\n            }\n            </div>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}